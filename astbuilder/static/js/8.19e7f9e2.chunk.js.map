{"version":3,"sources":["actions/index.js","helpers/startParserWorker.js","workers/parser.worker.js","config/editors.js","config/babelParser.js","config/xmlParser.js","parsers/ast2xml.js","parsers/ast2json.js","parsers/javascript/index.js","parsers/java/index.js","config/phpParser.js","parsers/php/index.js","parsers/c/index.js","config/babelGenerator.js","config/phpUnparser.js","parsers/ast2src.js","parsers/index.js","containers/InputWindow.js"],"names":["updateOptions","options","lang","type","payload","updateInput","value","updateLang","updateTheme","theme","startParsing","updateOutput","output","updateOutputType","loadFile","file","closeFile","startParserWorker","message","callback","worker","ParserWorker","postMessage","onmessage","e","terminate","module","exports","Worker","__webpack_public_path__","inputEditorOptions","minimap","enabled","scrollBeyondLastLine","outputEditorOptions","lineNumbers","readOnly","babelParserOptions","sourceType","he","require","j2xParserOptions","attributeNamePrefix","ignoreAttributes","format","indentBy","supressEmptyNode","attrValueProcessor","val","encode","useNamedReferences","x2jParserOptions","ignoreNameSpace","allowBooleanAttributes","parseAttributeValue","trimValues","parseTrueNumberOnly","decode","isAttributeValue","ast2xml","ast","j2xParser","parse","Program","ast2json","JSON","stringify","javascript","input","t1","performance","now","language","program","retainLines","clearLoc","obj","Object","keys","forEach","key","t2","json","t3","xml","timer","error","java","a","parseAst","assign","t4","phpParserConfig","parser","extractDoc","php7","suppressErrors","lexer","all_tokens","comment_tokens","withPositions","php","parseCode","clearNullSource","loc","source","c","babelGeneratorOptions","phpUnparserConfig","indent","dontUseWhitespaces","shortArray","bracketsNewLine","forceNamespaceBrackets","collapseEmptyLines","ast2src","srcLang","result","generate","code","unparse","connect","dispatch","bindActionCreators","useState","setTimer","handleChange","newValue","data","useEffect","className","isLoading","onChange","clearTimeout","setTimeout","editorDidMount","editor","window","addEventListener","layout","focus"],"mappings":"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","file":"static/js/8.19e7f9e2.chunk.js","sourcesContent":["export function updateOptions (options, lang) {\r\n  return {\r\n    type: 'UPDATE_OPTIONS',\r\n    payload: { options, lang }\r\n  }\r\n}\r\n\r\nexport function updateInput (value, lang) {\r\n  return {\r\n    type: 'UPDATE_INPUT',\r\n    payload: { value, lang }\r\n  }\r\n}\r\n\r\nexport function updateLang (lang) {\r\n  return {\r\n    type: 'UPDATE_LANG',\r\n    payload: lang\r\n  }\r\n}\r\n\r\nexport function updateTheme (theme) {\r\n  return {\r\n    type: 'UPDATE_THEME',\r\n    payload: theme\r\n  }\r\n}\r\n\r\nexport function startParsing () {\r\n  return {\r\n    type: 'START_PARSING'\r\n  }\r\n}\r\n\r\nexport function updateOutput (output) {\r\n  return {\r\n    type: 'UPDATE_OUTPUT',\r\n    payload: output\r\n  }\r\n}\r\n\r\nexport function updateOutputType (type) {\r\n  return {\r\n    type: 'UPDATE_OUTPUT_TYPE',\r\n    payload: type\r\n  }\r\n}\r\n\r\nexport function loadFile (file) {\r\n  return {\r\n    type: 'LOAD_FILE',\r\n    payload: file\r\n  }\r\n}\r\n\r\nexport function closeFile () {\r\n  return {\r\n    type: 'CLOSE_FILE'\r\n  }\r\n}\r\n","import ParserWorker from '../workers/parser.worker'\r\n\r\nexport default function startParserWorker (message, callback) {\r\n  const worker = new ParserWorker()\r\n  worker.postMessage(message)\r\n  worker.onmessage = (e) => {\r\n    callback(e)\r\n    worker.terminate()\r\n  }\r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"483eedf0e61a06ff2710.worker.js\");\n};","export const inputEditorOptions = {\r\n  minimap: {\r\n    enabled: false\r\n  },\r\n  scrollBeyondLastLine: false\r\n}\r\n\r\nexport const outputEditorOptions = {\r\n  minimap: {\r\n    enabled: false\r\n  },\r\n  lineNumbers: 'on',\r\n  scrollBeyondLastLine: false,\r\n  readOnly: true\r\n}\r\n","const babelParserOptions = {\r\n  sourceType: 'unambiguous'\r\n}\r\n\r\nexport default babelParserOptions\r\n","const he = require('he')\r\n\r\nexport const j2xParserOptions = {\r\n  attributeNamePrefix: '',\r\n  ignoreAttributes: false,\r\n  format: true,\r\n  indentBy: '  ',\r\n  supressEmptyNode: true,\r\n  attrValueProcessor: val =>\r\n    he.encode(val, { useNamedReferences: true })\r\n}\r\n\r\nexport const x2jParserOptions = {\r\n  attributeNamePrefix: '',\r\n  ignoreAttributes: false,\r\n  ignoreNameSpace: false,\r\n  allowBooleanAttributes: true,\r\n  parseAttributeValue: true,\r\n  trimValues: true,\r\n  parseTrueNumberOnly: false,\r\n  attrValueProcessor: val =>\r\n    he.decode(val, { isAttributeValue: true })\r\n}\r\n","import { j2xParser } from 'fast-xml-parser'\r\nimport { j2xParserOptions } from '../config/xmlParser'\r\n\r\nconst ast2xml = (ast, lang) => {\r\n  const parser = new j2xParser({ ...j2xParserOptions, lang })\r\n  return parser.parse({ Program: ast })\r\n}\r\n\r\nexport default ast2xml\r\n","const ast2json = (ast) => {\r\n  return JSON.stringify(ast, null, 2)\r\n}\r\n\r\nexport default ast2json\r\n","import { parse } from '@babel/parser'\r\nimport babelParserOptions from '../../config/babelParser'\r\nimport ast2xml from '../ast2xml'\r\nimport ast2json from '../ast2json'\r\n\r\nconst clearLoc = (obj) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (key === 'loc' || key === 'start' || key === 'end') {\r\n      delete obj[key]\r\n    } else if (obj[key] && typeof obj[key] === 'object') {\r\n      clearLoc(obj[key])\r\n    }\r\n  })\r\n}\r\n\r\nconst javascript = (input, options) => {\r\n  try {\r\n    const t1 = performance.now()\r\n    const ast = {\r\n      language: 'javascript',\r\n      ...parse(input, babelParserOptions).program\r\n    }\r\n    if (options && options.retainLines !== true) clearLoc(ast)\r\n    const t2 = performance.now()\r\n    const json = ast2json(ast)\r\n    const t3 = performance.now()\r\n    const xml = ast2xml(ast, 'javascript')\r\n    const t4 = performance.now()\r\n    const timer = { json: t3 - t1, xml: t4 - t3 + t2 - t1 }\r\n\r\n    return { json, xml, timer }\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport default javascript\r\n","import ast2json from '../ast2json'\r\nimport ast2xml from '../ast2xml'\r\n\r\nconst clearLoc = (obj) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (typeof obj[key] === 'number' && (key === 'stop' || key === 'start' || key === 'line' || key === 'column')) {\r\n      delete obj[key]\r\n    } else if (obj[key] && typeof obj[key] === 'object') {\r\n      clearLoc(obj[key])\r\n    }\r\n  })\r\n}\r\n\r\nconst java = async (input, options) => {\r\n  try {\r\n    const { parseAst } = await import('univac')\r\n    const t1 = performance.now()\r\n    const ast = Object.assign({ language: 'java' }, await parseAst({\r\n      input,\r\n      language: 'java'\r\n    }))\r\n    if (options && options.retainLines !== true) clearLoc(ast)\r\n    const t2 = performance.now()\r\n    const json = ast2json(ast)\r\n    const t3 = performance.now()\r\n    const xml = ast2xml(ast, 'java')\r\n    const t4 = performance.now()\r\n    const timer = { json: t3 - t1, xml: t4 - t3 + t2 - t1 }\r\n\r\n    return { json, xml, timer }\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport default java\r\n","const phpParserConfig = {\r\n  parser: {\r\n    extractDoc: true,\r\n    php7: true,\r\n    suppressErrors: false\r\n  },\r\n  lexer: {\r\n    all_tokens: true,\r\n    comment_tokens: true\r\n  },\r\n  ast: {\r\n    withPositions: true\r\n  }\r\n}\r\n\r\nexport default phpParserConfig\r\n","import phpParserConfig from '../../config/phpParser'\r\nimport ast2xml from '../ast2xml'\r\nimport ast2json from '../ast2json'\r\n\r\nconst engine = require('php-parser')\r\nconst parser = new engine(phpParserConfig)\r\n\r\nconst clearLoc = (obj) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (key === 'loc') {\r\n      delete obj[key]\r\n    } else if (obj[key] && typeof obj[key] === 'object') {\r\n      clearLoc(obj[key])\r\n    }\r\n  })\r\n}\r\n\r\nconst clearNullSource = (obj) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (key === 'loc') {\r\n      delete obj.loc.source\r\n    } else if (obj[key] && typeof obj[key] === 'object') {\r\n      clearNullSource(obj[key])\r\n    }\r\n  })\r\n}\r\n\r\nconst php = (input, options) => {\r\n  try {\r\n    const t1 = performance.now()\r\n    const ast = {\r\n      language: 'php',\r\n      ...parser.parseCode(input)\r\n    }\r\n    clearNullSource(ast)\r\n    if (options && options.retainLines !== true) clearLoc(ast)\r\n    const t2 = performance.now()\r\n    const json = ast2json(ast)\r\n    const t3 = performance.now()\r\n    const xml = ast2xml(ast, 'php')\r\n    const t4 = performance.now()\r\n    const timer = { json: t3 - t1, xml: t4 - t3 + t2 - t1 }\r\n\r\n    return { json, xml, timer }\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport default php\r\n","import ast2json from '../ast2json'\r\nimport ast2xml from '../ast2xml'\r\n\r\nconst clearLoc = (obj) => {\r\n  Object.keys(obj).forEach(key => {\r\n    if (typeof obj[key] === 'number' && (key === 'stop' || key === 'start' || key === 'line' || key === 'column')) {\r\n      delete obj[key]\r\n    } else if (obj[key] && typeof obj[key] === 'object') {\r\n      clearLoc(obj[key])\r\n    }\r\n  })\r\n}\r\n\r\nconst c = async (input, options) => {\r\n  try {\r\n    const { parseAst } = await import('univac')\r\n    const t1 = performance.now()\r\n    const ast = Object.assign({ language: 'c' }, await parseAst({\r\n      input,\r\n      language: 'c'\r\n    }))\r\n    if (options && options.retainLines !== true) clearLoc(ast)\r\n    const t2 = performance.now()\r\n    const json = ast2json(ast)\r\n    const t3 = performance.now()\r\n    const xml = ast2xml(ast, 'c')\r\n    const t4 = performance.now()\r\n    const timer = { json: t3 - t1, xml: t4 - t3 + t2 - t1 }\r\n\r\n    return { json, xml, timer }\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport default c\r\n","const babelGeneratorOptions = {\r\n  retainLines: true\r\n}\r\n\r\nexport default babelGeneratorOptions\r\n","const phpUnparserConfig = {\r\n    indent: true,\r\n    dontUseWhitespaces: false,\r\n    shortArray: true,\r\n    bracketsNewLine: true,\r\n    forceNamespaceBrackets: false,\r\n    collapseEmptyLines: true\r\n}\r\n\r\nexport default phpUnparserConfig\r\n","import parser from 'fast-xml-parser'\r\nimport generate from '@babel/generator'\r\nimport { x2jParserOptions } from '../config/xmlParser'\r\nimport babelGeneratorOptions from '../config/babelGenerator'\r\nimport phpUnparserConfig from '../config/phpUnparser'\r\nimport unparse from 'php-unparser'\r\n\r\nconst ast2src = (input, lang) => {\r\n  try {\r\n    const t1 = performance.now()\r\n    const ast = lang === 'xml' ? parser.parse(input, x2jParserOptions).Program : JSON.parse(input)\r\n    const srcLang = ast.language\r\n    const result = {}\r\n    switch (srcLang) {\r\n      case 'javascript':\r\n        result[srcLang] = generate(ast, babelGeneratorOptions).code\r\n        break\r\n      case 'php':\r\n        result[srcLang] = unparse(ast, phpUnparserConfig)\r\n        break\r\n      default:\r\n        return { error: 'Can\\'t generate src' }\r\n    }\r\n    const t2 = performance.now()\r\n    result.timer = {}\r\n    result.timer[srcLang] = t2 - t1\r\n    return result\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport default ast2src\r\n","import javascript from './javascript'\r\nimport java from './java'\r\nimport php from './php'\r\nimport c from './c'\r\nimport ast2src from './ast2src'\r\n\r\nconst parser = (input, lang, options) => {\r\n  switch (lang) {\r\n    case 'json': {\r\n      return ast2src(input, lang)\r\n    }\r\n    case 'xml': {\r\n      return ast2src(input, lang)\r\n    }\r\n    case 'javascript': {\r\n      return javascript(input, options)\r\n    }\r\n    case 'php': {\r\n      return php(input, options)\r\n    }\r\n    case 'java': {\r\n      return java(input, options)\r\n    }\r\n    case 'c': {\r\n      return c(input, options)\r\n    }\r\n    default: {\r\n      return {\r\n        error: 'Wrong lang'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default parser\r\n","import React, { useState, useEffect } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport MonacoEditor from 'react-monaco-editor'\r\nimport { startParsing, updateInput, updateOutput, updateOutputType } from '../actions'\r\nimport startParserWorker from '../helpers/startParserWorker'\r\nimport { inputEditorOptions } from '../config/editors'\r\nimport parser from '../parsers'\r\n\r\nconst DEFAULT_TIMEOUT = 200\r\n\r\nconst InputWindow = ({\r\n  options,\r\n  input,\r\n  lang,\r\n  theme,\r\n  file,\r\n  startParsing,\r\n  updateInput,\r\n  updateOutput,\r\n  updateOutputType\r\n}) => {\r\n  const [timer, setTimer] = useState(null)\r\n  const handleChange = async (newValue) => {\r\n    startParsing()\r\n    if (lang === 'php') {\r\n      const output = parser(newValue, lang, options[lang])\r\n      updateOutput(output)\r\n    } else {\r\n      startParserWorker({\r\n        input: newValue,\r\n        lang,\r\n        options: options[lang]\r\n      }, (e) => {\r\n        const output = e.data\r\n        updateOutput(output)\r\n      })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    startParsing()\r\n    if (lang === 'php') {\r\n      const output = parser(input[lang], lang, options[lang])\r\n      updateOutput(output)\r\n    } else {\r\n      startParserWorker({\r\n        input: input[lang],\r\n        lang,\r\n        options: options[lang]\r\n      }, (e) => {\r\n        const output = e.data\r\n        updateOutput(output)\r\n        updateOutputType('json')\r\n      })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div className={input.isLoading ? 'input loading' : 'input'}>\r\n      <MonacoEditor\r\n        language={lang}\r\n        theme={theme}\r\n        value={input[lang]}\r\n        options={file ? { ...inputEditorOptions, readOnly: true } : { ...inputEditorOptions, readOnly: false }}\r\n        onChange={(newValue) => {\r\n          updateInput(newValue, lang)\r\n          clearTimeout(timer)\r\n          setTimer(setTimeout(() => handleChange(newValue), DEFAULT_TIMEOUT))\r\n        }}\r\n        editorDidMount={(editor) => {\r\n          window.addEventListener('resize', () => editor.layout())\r\n          editor.focus()\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ options, input, lang, theme, file }) => ({ options, input, lang, theme, file })\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    startParsing: bindActionCreators(startParsing, dispatch),\r\n    updateInput: bindActionCreators(updateInput, dispatch),\r\n    updateOutput: bindActionCreators(updateOutput, dispatch),\r\n    updateOutputType: bindActionCreators(updateOutputType, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputWindow)\r\n"],"sourceRoot":""}