{"version":3,"sources":["components/App.js","reducers/index.js","localStorage.js","index.js","helpers/defaultPrograms.js","helpers/preloadedState.js","helpers/defaultOptions.js"],"names":["MenuBar","lazy","InputWindow","OutputWindow","App","className","fallback","reducer","state","action","type","options","payload","lang","input","value","theme","output","isLoading","outputType","file","persistedState","serializedState","window","localStorage","getItem","preloadedState","json","JSON","parse","version","xml","e","loadState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","props","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById","defaultPrograms","javascript","php","c","java","retainLines"],"mappings":"wRAKMA,G,wBAAUC,gBAAK,kBAAM,kCACrBC,EAAcD,gBAAK,kBAAM,uDACzBE,EAAeF,gBAAK,kBAAM,uDAgBjBG,EAdH,WACV,OACE,yBAAKC,UAAU,OACb,kBAAC,WAAD,CAAUC,SAAU,yBAAKD,UAAU,YACjC,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,kBAACH,EAAD,MACA,kBAACC,EAAD,U,gkBChBV,IAwEeI,EAxEC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,EAAP,GACKF,EADL,CAEEG,QAAQ,EAAD,GACFH,EAAMG,QADJ,eAEJF,EAAOG,QAAQC,KAAOJ,EAAOG,QAAQD,YAG5C,IAAK,eACH,OAAIF,EAAOG,QAAQC,KACV,EAAP,GACKL,EADL,CAEEM,MAAM,EAAD,GACAN,EAAMM,MADN,eAEFL,EAAOG,QAAQC,KAAOJ,EAAOG,QAAQG,UAInC,EAAP,GACKP,EADL,CAEEM,MAAOL,EAAOG,QAAQG,QAI5B,IAAK,cACH,OAAO,EAAP,GACKP,EADL,CAEEK,KAAMJ,EAAOG,UAEjB,IAAK,eACH,OAAO,EAAP,GACKJ,EADL,CAEEQ,MAAOP,EAAOG,UAElB,IAAK,gBACH,OAAO,EAAP,GACKJ,EADL,CAEES,OAAO,EAAD,GACDT,EAAMS,OADL,CAEJC,WAAW,MAGjB,IAAK,gBACH,OAAO,EAAP,GACKV,EADL,CAEES,OAAO,EAAD,GACDR,EAAOG,QADN,CAEJM,WAAW,MAGjB,IAAK,qBACH,OAAO,EAAP,GACKV,EADL,CAEEW,WAAYV,EAAOG,UAEvB,IAAK,YACH,OAAO,EAAP,GACKJ,EADL,CAEEY,KAAMX,EAAOG,UAEjB,IAAK,aACH,OAAO,EAAP,GACKJ,EADL,CAEEY,KAAM,OAEV,QACE,OAAOZ,I,6OClEN,ICODa,EDPmB,WACvB,IACE,IAAMC,EAAkBC,OAAOC,aAAaC,QAAQ,SACpD,GAAwB,OAApBH,EACF,OAAOI,IAET,IAAMC,EAAOC,KAAKC,MAAMP,GAChBQ,EAAYH,EAAZG,QACR,OAAKA,GAAWA,EAAUJ,IAAeI,QAChCJ,I,yVAEF,IACFC,EADL,CAEEV,OAAQ,CAAEU,KAAM,aAAcI,IAAK,cACnCZ,WAAY,SAEd,MAAOa,GACP,QCVmBC,GACjBC,EAAQC,YACZ5B,EACAc,EACAE,OAAOa,8BAAgCb,OAAOa,gCAEhDF,EAAMG,UAAUC,oBAAS,YDQA,SAAC9B,GACxB,IAAK,IACKY,EAAuCZ,EAAvCY,KAA6BmB,GAAU/B,EAAjCS,OAAiCT,EAAzBW,WADpB,YAC6CX,EAD7C,iCAEIc,EAAkBM,KAAKY,UAAUD,GAClCnB,GAAMG,OAAOC,aAAaiB,QAAQ,QAASnB,GAChD,MAAOU,GACP,QCbFU,CAAUR,EAAMS,cACf,MAEHC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,EAAD,OAEFY,SAASC,eAAe,U,0CCKXC,EA5BS,CACtBC,WAAY,gCACZC,IAAK,qSAWLC,EAAG,oFAOHC,KAAM,8I,yjBCjBR,IACMzC,EAAO,KCJU,CACrBsC,WAAY,CACVI,aAAa,GAEfD,KAAM,CAAEC,aAAa,GACrBF,EAAG,CAAEE,aAAa,GAClBH,IAAK,CAAEG,aAAa,GACpBtB,IAAK,GACLJ,KAAM,KDHFb,EAAK,KAAQkC,GAOJ,KAAElB,QATD,KASUnB,UAASG,QAAOD,KAN7B,aAMmCG,MALlC,UAKyCC,OAJxC,CAAEU,KAAM,aAAcI,IAAK,cAIqBZ,WAH5C,OAGwDC,KAF9D,Q","file":"static/js/main.e9c76264.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../styles/App.css'\r\nimport '../styles/MenuBar.css'\r\nimport '../styles/Editors.css'\r\nconst MenuBar = lazy(() => import('../containers/MenuBar'))\r\nconst InputWindow = lazy(() => import('../containers/InputWindow'))\r\nconst OutputWindow = lazy(() => import('../containers/OutputWindow'))\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='app'>\r\n      <Suspense fallback={<div className='loader' />}>\r\n        <MenuBar />\r\n        <div className='editors'>\r\n          <InputWindow />\r\n          <OutputWindow />\r\n        </div>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_OPTIONS':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          [action.payload.lang]: action.payload.options\r\n        }\r\n      }\r\n    case 'UPDATE_INPUT':\r\n      if (action.payload.lang) {\n        return {\r\n          ...state,\r\n          input: {\r\n            ...state.input,\r\n            [action.payload.lang]: action.payload.value\r\n          }\r\n        }\n      } else {\r\n        return {\r\n          ...state,\r\n          input: action.payload.value\r\n        }\r\n      }\r\n\r\n    case 'UPDATE_LANG':\r\n      return {\r\n        ...state,\r\n        lang: action.payload\r\n      }\r\n    case 'UPDATE_THEME':\r\n      return {\r\n        ...state,\r\n        theme: action.payload\r\n      }\r\n    case 'START_PARSING':\r\n      return {\r\n        ...state,\r\n        output: {\r\n          ...state.output,\r\n          isLoading: true\r\n        }\r\n      }\r\n    case 'UPDATE_OUTPUT':\r\n      return {\r\n        ...state,\r\n        output: {\r\n          ...action.payload,\r\n          isLoading: false\r\n        }\r\n      }\r\n    case 'UPDATE_OUTPUT_TYPE':\r\n      return {\r\n        ...state,\r\n        outputType: action.payload\r\n      }\r\n    case 'LOAD_FILE':\r\n      return {\r\n        ...state,\r\n        file: action.payload\r\n      }\r\n    case 'CLOSE_FILE':\r\n      return {\r\n        ...state,\r\n        file: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import preloadedState from './helpers/preloadedState'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = window.localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return preloadedState\r\n    }\r\n    const json = JSON.parse(serializedState)\r\n    const { version } = json\r\n    if (!version || version < preloadedState.version) {\r\n      return preloadedState\r\n    }\r\n    return {\r\n      ...json,\r\n      output: { json: 'Loading...', xml: 'Loading...' },\r\n      outputType: 'json'\r\n    }\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const { file, output, outputType, ...props } = state\r\n    const serializedState = JSON.stringify(props)\r\n    if (!file) window.localStorage.setItem('state', serializedState)\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { throttle } from 'lodash'\r\nimport App from './components/App'\r\nimport reducer from './reducers'\r\nimport { loadState, saveState } from './localStorage'\r\n\r\nconst persistedState = loadState()\r\nconst store = createStore(\r\n  reducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nstore.subscribe(throttle(() => {\r\n  saveState(store.getState())\r\n}, 1000))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const defaultPrograms = {\r\n  javascript: 'const a = [1, true, () => {}]',\r\n  php: '<?php\\n' +\r\n      '// Комментарий\\n' +\r\n      'function sum($a, $b) {\\n' +\r\n      '    return $a + $b;\\n' +\r\n      '}\\n' +\r\n      '/* Блочный\\n' +\r\n      'Комментарий */\\n' +\r\n      '$num1 = 2;\\n' +\r\n      '$num2 = 3;\\n' +\r\n      'sum($num1, $num2);\\n' +\r\n      '?>',\r\n  c: '#include <stdio.h>\\n' +\r\n      ' \\n' +\r\n      'int main()\\n' +\r\n      '{\\n' +\r\n      '  printf(\"Hello World\\\\n\");\\n' +\r\n      '  return 0;\\n' +\r\n      '}',\r\n  java: 'import java.util;\\n' +\r\n      'class HelloWorld {\\n' +\r\n      '    public static void main(String[] args) {\\n' +\r\n      '        System.out.println(\"Hello World!\");\\n' +\r\n      '    }\\n' +\r\n      '}'\r\n}\r\n\r\nexport default defaultPrograms\r\n","import defaultPrograms from './defaultPrograms'\r\nimport defaultOptions from './defaultOptions'\r\n\r\nconst version = 1.75\r\nconst options = { ...defaultOptions }\r\nconst input = { ...defaultPrograms }\r\nconst lang = 'javascript'\r\nconst theme = 'vs-dark'\r\nconst output = { json: 'Loading...', xml: 'Loading...' }\r\nconst outputType = 'json'\r\nconst file = null\r\n\r\nexport default { version, options, input, lang, theme, output, outputType, file }\r\n","const defaultOptions = {\r\n  javascript: {\r\n    retainLines: true\r\n  },\r\n  java: { retainLines: true },\r\n  c: { retainLines: true },\r\n  php: { retainLines: true },\r\n  xml: {},\r\n  json: {}\r\n}\r\n\r\nexport default defaultOptions\r\n"],"sourceRoot":""}