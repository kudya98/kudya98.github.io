{"version":3,"sources":["components/App.js","reducers/index.js","helpers/preloadedState.js","helpers/defaultPrograms.js","localStorage.js","index.js"],"names":["MenuBar","lazy","InputWindow","OutputWindow","App","className","fallback","reducer","state","action","type","input","payload","lang","value","theme","output","isLoading","outputType","file","javascript","php","java","json","xml","persistedState","serializedState","window","localStorage","getItem","preloadedState","JSON","parse","e","loadState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","props","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"wRAKMA,G,wBAAUC,gBAAK,kBAAM,kCACrBC,EAAcD,gBAAK,kBAAM,uDACzBE,EAAeF,gBAAK,kBAAM,uDAgBjBG,EAdH,WACV,OACE,yBAAKC,UAAU,OACb,kBAAC,WAAD,CAAUC,SAAU,yBAAKD,UAAU,YACjC,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,kBAACH,EAAD,MACA,kBAACC,EAAD,U,gkBChBV,IAwDeI,EAxDC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOC,MACb,IAAK,eACH,OAAO,EAAP,GACKF,EADL,CAEEG,MAAM,EAAD,GACAH,EAAMG,MADN,eAEFF,EAAOG,QAAQC,KAAOJ,EAAOG,QAAQE,UAG5C,IAAK,cACH,OAAO,EAAP,GACKN,EADL,CAEEK,KAAMJ,EAAOG,UAEjB,IAAK,eACH,OAAO,EAAP,GACKJ,EADL,CAEEO,MAAON,EAAOG,UAElB,IAAK,gBACH,OAAO,EAAP,GACKJ,EADL,CAEEQ,OAAO,EAAD,GACDR,EAAMQ,OADL,CAEJC,WAAW,MAGjB,IAAK,gBACH,OAAO,EAAP,GACKT,EADL,CAEEQ,OAAO,EAAD,GACDP,EAAOG,QADN,CAEJK,WAAW,MAGjB,IAAK,qBACH,OAAO,EAAP,GACKT,EADL,CAEEU,WAAYT,EAAOG,UAEvB,IAAK,YACH,OAAO,EAAP,GACKJ,EADL,CAEEW,KAAMV,EAAOG,UAEjB,IAAK,aACH,OAAO,EAAP,GACKJ,EADL,CAEEW,KAAM,OAEV,QACE,OAAOX,I,sOClDb,IAOe,GAAEG,M,yVAPN,ICFa,CACtBS,WAAY,gCACZC,IAAK,4FAMLC,KAAM,4HDCgBT,KANX,aAMiBE,MALhB,UAKuBC,OAJtB,CAAEO,KAAM,aAAcC,IAAK,cAIGN,WAH1B,OAGsCC,KAF5C,M,8NELN,ICODM,EDPmB,WACvB,IACE,IAAMC,EAAkBC,OAAOC,aAAaC,QAAQ,SACpD,OAAwB,OAApBH,EACKI,E,yVAEF,IACFC,KAAKC,MAAMN,GADhB,CAEEV,OAAQ,CAAEO,KAAM,aAAcC,IAAK,cACnCN,WAAY,SAEd,MAAOe,GACP,QCLmBC,GACjBC,EAAQC,YACZ7B,EACAkB,EACAE,OAAOU,8BAAgCV,OAAOU,gCAEhDF,EAAMG,UAAUC,oBAAS,YDGA,SAAC/B,GACxB,IACiDA,EAAvCW,KAAuCX,EAAjCQ,OAAiCR,EAAzBU,WADnB,IACkCsB,EADnC,YAC6ChC,EAD7C,gCAEIkB,EAAkBK,KAAKU,UAAUD,GACvCb,OAAOC,aAAac,QAAQ,QAAShB,GACrC,MAAOO,GACP,QCRFU,CAAUR,EAAMS,cACf,MAEHC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,EAAD,OAEFY,SAASC,eAAe,W","file":"static/js/main.637ec918.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../styles/App.css'\r\nimport '../styles/MenuBar.css'\r\nimport '../styles/Editors.css'\r\nconst MenuBar = lazy(() => import('../containers/MenuBar'))\r\nconst InputWindow = lazy(() => import('../containers/InputWindow'))\r\nconst OutputWindow = lazy(() => import('../containers/OutputWindow'))\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='app'>\r\n      <Suspense fallback={<div className='loader' />}>\r\n        <MenuBar />\r\n        <div className='editors'>\r\n          <InputWindow />\r\n          <OutputWindow />\r\n        </div>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_INPUT':\r\n      return {\r\n        ...state,\r\n        input: {\r\n          ...state.input,\r\n          [action.payload.lang]: action.payload.value\r\n        }\r\n      }\r\n    case 'UPDATE_LANG':\r\n      return {\r\n        ...state,\r\n        lang: action.payload\r\n      }\r\n    case 'UPDATE_THEME':\r\n      return {\r\n        ...state,\r\n        theme: action.payload\r\n      }\r\n    case 'START_PARSING':\r\n      return {\r\n        ...state,\r\n        output: {\r\n          ...state.output,\r\n          isLoading: true\r\n        }\r\n      }\r\n    case 'UPDATE_OUTPUT':\r\n      return {\r\n        ...state,\r\n        output: {\r\n          ...action.payload,\r\n          isLoading: false\r\n        }\r\n      }\r\n    case 'UPDATE_OUTPUT_TYPE':\r\n      return {\r\n        ...state,\r\n        outputType: action.payload\r\n      }\r\n    case 'OPEN_FILE':\r\n      return {\r\n        ...state,\r\n        file: action.payload\r\n      }\r\n    case 'CLOSE_FILE':\r\n      return {\r\n        ...state,\r\n        file: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import defaultPrograms from './defaultPrograms'\r\n\r\nconst input = { ...defaultPrograms }\r\nconst lang = 'javascript'\r\nconst theme = 'vs-dark'\r\nconst output = { json: 'Loading...', xml: 'Loading...' }\r\nconst outputType = 'json'\r\nconst file = null\r\n\r\nexport default { input, lang, theme, output, outputType, file }\r\n","const defaultPrograms = {\r\n  javascript: 'const a = [1, true, () => {}]',\r\n  php: '<?php\\n' +\r\n      'function getFib($n)\\n' +\r\n      '{\\n' +\r\n      '    return round(pow((sqrt(5)+1)/2, $n) / sqrt(5));\\n' +\r\n      '}\\n' +\r\n      '?>',\r\n  java: 'class HelloWorld {\\n' +\r\n      '    public static void main(String[] args) {\\n' +\r\n      '        System.out.println(\"Hello World!\");\\n' +\r\n      '    }\\n' +\r\n      '}'\r\n}\r\n\r\nexport default defaultPrograms\r\n","import preloadedState from './helpers/preloadedState'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = window.localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return preloadedState\r\n    }\r\n    return {\r\n      ...JSON.parse(serializedState),\r\n      output: { json: 'Loading...', xml: 'Loading...' },\r\n      outputType: 'json'\r\n    }\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const { file, output, outputType, ...props } = state\r\n    const serializedState = JSON.stringify(props)\r\n    window.localStorage.setItem('state', serializedState)\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { throttle } from 'lodash'\r\nimport App from './components/App'\r\nimport reducer from './reducers'\r\nimport { loadState, saveState } from './localStorage'\r\n\r\nconst persistedState = loadState()\r\nconst store = createStore(\r\n  reducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nstore.subscribe(throttle(() => {\r\n  saveState(store.getState())\r\n}, 1000))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}