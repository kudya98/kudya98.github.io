{"version":3,"sources":["actions/index.js","helpers/startParserWorker.js","workers/parser.worker.js","config/editors.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/InputWindow.js"],"names":["updateOptions","options","lang","type","payload","updateInput","value","updateLang","updateTheme","theme","startParsing","updateOutput","output","updateOutputType","loadFile","file","closeFile","startParserWorker","message","callback","worker","ParserWorker","postMessage","onmessage","e","terminate","module","exports","Worker","__webpack_public_path__","inputEditorOptions","minimap","enabled","scrollBeyondLastLine","outputEditorOptions","lineNumbers","readOnly","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","connect","input","dispatch","bindActionCreators","useState","timer","setTimer","handleChange","newValue","a","data","args","arguments","apply","useEffect","className","isLoading","language","onChange","clearTimeout","setTimeout","editorDidMount","editor","window","addEventListener","layout","focus"],"mappings":"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","file":"static/js/5.89c21b24.chunk.js","sourcesContent":["export function updateOptions (options, lang) {\r\n  return {\r\n    type: 'UPDATE_OPTIONS',\r\n    payload: { options, lang }\r\n  }\r\n}\r\n\r\nexport function updateInput (value, lang) {\r\n  return {\r\n    type: 'UPDATE_INPUT',\r\n    payload: { value, lang }\r\n  }\r\n}\r\n\r\nexport function updateLang (lang) {\r\n  return {\r\n    type: 'UPDATE_LANG',\r\n    payload: lang\r\n  }\r\n}\r\n\r\nexport function updateTheme (theme) {\r\n  return {\r\n    type: 'UPDATE_THEME',\r\n    payload: theme\r\n  }\r\n}\r\n\r\nexport function startParsing () {\r\n  return {\r\n    type: 'START_PARSING'\r\n  }\r\n}\r\n\r\nexport function updateOutput (output) {\r\n  return {\r\n    type: 'UPDATE_OUTPUT',\r\n    payload: output\r\n  }\r\n}\r\n\r\nexport function updateOutputType (type) {\r\n  return {\r\n    type: 'UPDATE_OUTPUT_TYPE',\r\n    payload: type\r\n  }\r\n}\r\n\r\nexport function loadFile (file) {\r\n  return {\r\n    type: 'LOAD_FILE',\r\n    payload: file\r\n  }\r\n}\r\n\r\nexport function closeFile () {\r\n  return {\r\n    type: 'CLOSE_FILE'\r\n  }\r\n}\r\n","import ParserWorker from '../workers/parser.worker'\r\n\r\nexport default function startParserWorker (message, callback) {\r\n  const worker = new ParserWorker()\r\n  worker.postMessage(message)\r\n  worker.onmessage = (e) => {\r\n    callback(e)\r\n    worker.terminate()\r\n  }\r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"d4c6174bd3b65a1fab1f.worker.js\");\n};","export const inputEditorOptions = {\r\n  minimap: {\r\n    enabled: false\r\n  },\r\n  scrollBeyondLastLine: false\r\n}\r\n\r\nexport const outputEditorOptions = {\r\n  minimap: {\r\n    enabled: false\r\n  },\r\n  lineNumbers: 'on',\r\n  scrollBeyondLastLine: false,\r\n  readOnly: true\r\n}\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useEffect } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport MonacoEditor from 'react-monaco-editor'\r\nimport { startParsing, updateInput, updateOutput, updateOutputType } from '../actions'\r\nimport startParserWorker from '../helpers/startParserWorker'\r\nimport { inputEditorOptions } from '../config/editors'\r\n\r\nconst DEFAULT_TIMEOUT = 200\r\n\r\nconst InputWindow = ({\r\n  options,\r\n  input,\r\n  lang,\r\n  theme,\r\n  file,\r\n  startParsing,\r\n  updateInput,\r\n  updateOutput,\r\n  updateOutputType\r\n}) => {\r\n  const [timer, setTimer] = useState(null)\r\n  const handleChange = async (newValue) => {\r\n    startParsing()\r\n    startParserWorker({\r\n      input: newValue,\r\n      lang,\r\n      options: options[lang]\r\n    }, (e) => {\r\n      const output = e.data\r\n      updateOutput(output)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    startParsing()\r\n    startParserWorker({\r\n      input: input[lang],\r\n      lang,\r\n      options: options[lang]\r\n    }, (e) => {\r\n      const output = e.data\r\n      updateOutput(output)\r\n      updateOutputType('json')\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <div className={input.isLoading ? 'input loading' : 'input'}>\r\n      <MonacoEditor\r\n        language={lang}\r\n        theme={theme}\r\n        value={input[lang]}\r\n        options={file ? { ...inputEditorOptions, readOnly: true } : { ...inputEditorOptions, readOnly: false }}\r\n        onChange={(newValue) => {\r\n          updateInput(newValue, lang)\r\n          clearTimeout(timer)\r\n          setTimer(setTimeout(() => handleChange(newValue), DEFAULT_TIMEOUT))\r\n        }}\r\n        editorDidMount={(editor) => {\r\n          window.addEventListener('resize', () => editor.layout())\r\n          editor.focus()\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ options, input, lang, theme, file }) => ({ options, input, lang, theme, file })\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    startParsing: bindActionCreators(startParsing, dispatch),\r\n    updateInput: bindActionCreators(updateInput, dispatch),\r\n    updateOutput: bindActionCreators(updateOutput, dispatch),\r\n    updateOutputType: bindActionCreators(updateOutputType, dispatch)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputWindow)\r\n"],"sourceRoot":""}